plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.uninav'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
	set('springAiVersion', "1.0.0-M2")
}

dependencies {
	// MongoDB starter dependency
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

	// Email support for notifications
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'com.sun.mail:jakarta.mail:2.0.1'
	// Thymeleaf for templating (if using web views)
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// Web starter for building REST APIs and web apps
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Spring AI Elasticsearch (if needed for AI use cases)
	implementation 'org.springframework.ai:spring-ai-elasticsearch-store-spring-boot-starter'

	implementation 'software.amazon.awssdk:s3:2.20.20'
	implementation 'io.github.cdimascio:java-dotenv:5.2.2'
	// Lombok for reducing boilerplate code
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// Test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Uncomment these if using Spring Security
	// implementation 'org.springframework.boot:spring-boot-starter-security'
	// implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	// testImplementation 'org.springframework.security:spring-security-test'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
	}
}

tasks.named('test') {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

tasks.named('asciidoctor') {
	inputs.dir snippetsDir
	dependsOn test
}
